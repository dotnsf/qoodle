<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8"/>
<title><%= room %> - <%= id %></title>
<script type="text/javascript" src="//code.jquery.com/jquery-2.2.4.min.js"></script>
<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet"/>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
<script src="/cvi_busy_lib.js"></script>
<script src="/socket.io/socket.io.js"></script>

<link href="/colorbox.css" rel="stylesheet"/>
<script src="/jquery.colorbox-min.js"></script>
<script src="/common.js"></script>

<meta name="viewport" content="width=device-width,initial-scale=1"/>

<link rel="shortcut icon" href="/icon.png" type="image/png"/>
<link rel="icon" href="/icon.png" type="image/png"/>
<link rel="apple-touch-icon" href="/icon.png"/>

<meta name="viewport" content="width=device-width,initial-scale=1"/>
<meta name="apple-mobile-web-app-capable" content="yes"/>
<meta name="apple-mobile-web-app-status-bar-style" content="black"/>
<meta name="apple-mobile-web-app-title" content="Qoodle"/>

<style type="text/css">
html, body{
  text-align: center;
  background-color: #fafafa;
  font-size: 20px;
  color: #333;
}
.mycanvas{
  border: 1px solid #333;
}
.card-columns{
  column-count: 1;
}
.card-group .card{
  max-width: calc(100%);
}
#open16_table{
  background-repeat: no-repeat;
  background-size: 100% 100%
}
.num_panel{
  width: 15%;
  height: 100px;
  color: #fff;
  background-color: #006;
  border-style: solid;
  border-width: 2px;
  text-align: center;
  opacity: 0.6;
}
</style>
</head>
<body>

<h1 id="subject"><%= id %></h1>

<div class="container">
  <table class="table table-bordered">
    <thead>
      <tr>
        <th>#</th><th><%= __('quizset.list.col1.label') %></th><th><%= __('quizset.list.col2.label') %></th><th><%= __('quizset.list.col3.label') %></th><th><%= __('quizset.list.col4.label') %></th><th><%= __('quizset.list.col5.label') %></th>
      </tr>
    </thead>
    <tbody id="quizlist_tbody">
    </tbody>
  </table>
</div>

<div class="container p-3" id="quiz_body">
  <ul class="nav nav-tabs">
    <li class="nav-item"><a href="#tab-pane-quiz" data-toggle="tab" class="nav-link active"><%= __('quizset.tab.quiz.label') %></a></li>
    <li class="nav-item"><a href="#tab-pane-answers" data-toggle="tab" class="nav-link"><%= __('quizset.tab.answers.label') %></a></li>
    <li class="nav-item"><a href="#tab-pane-rank" data-toggle="tab" class="nav-link"><%= __('quizset.tab.rank.label') %></a></li>
  </ul>
  <div class="tab-content">
    <div id="tab-pane-quiz" class="tab-pane active">
    </div>
    <div id="tab-pane-answers" class="tab-pane">
      <div id="card-groups">
        <!--
        <div class="card-group" id="cards-1">
        </div>
        -->
      </div>

      <button id="quizFinishBtn" class="btn btn-primary" onClick="quizFinish();" style="display: none;"><%= __('quizset.quizfinish.button') %></button>
      <button id="showAnswersBtn" class="btn btn-primary" onClick="showAnswers();"><%= __('quizset.showanswers.button') %></button>
    </div>
    <div id="tab-pane-rank" class="tab-pane">
      <div id="rank-table">
      </div>

      <button id="showRankBtn" class="btn btn-primary" onClick="showRank();"><%= __('quizset.showrank.button') %></button>
      <button id="recordAnswersBtn" class="btn btn-success" onClick="recordAnswers();"><%= __('quizset.recordanswers.button') %></button>
    </div>
  </div>
</div>

<div class="modal bd-example-modal-lg fade" id="answersModal" tabindex="-1" role="dialog" aria-labbelledby="answersModal" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="answersModalLabel"><%= __('quizset.answersmodal.label') %></h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="answersmodal-body">
        <table class="table table-bordered">
          <tbody id="answers_body">
          </tbody>
        </table>
      </div>
      <div class="modal-footer btn-center">
        <!--
        <button type="button" class="btn btn-info btn-xs py-0" onClick="migrateFrom();"><i class="fas fa-file-export"></i></button>
        -->
      </div>
    </div>
  </div>
</div>

<div class="modal bd-example-modal-lg fade" id="hideAnswersModal" tabindex="-1" role="dialog" aria-labbelledby="hideAnswersModal" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="hideAnswersModalLabel"><%= __('quizset.hideanswersmodal.label') %></h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="hideanswersmodal-body">
        <button id="hideAnswersBtn" class="btn btn-primary" onClick="hideAnswers();"><%= __('quizset.hideanswersmodal.button' )%></button>
      </div>
      <div class="modal-footer btn-center">
        <!--
        <button type="button" class="btn btn-info btn-xs py-0" onClick="migrateFrom();"><i class="fas fa-file-export"></i></button>
        -->
      </div>
    </div>
  </div>
</div>

<div class="modal bd-example-modal-lg fade" id="hideRankModal" tabindex="-1" role="dialog" aria-labbelledby="hideRankModal" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="hideRankModalLabel"><%= __('quizset.hiderankmodal.label') %></h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="hiderankmodal-body">
        <button id="hideRankBtn" class="btn btn-primary" onClick="hideRank();"><%= __('quizset.hiderankmodal.button') %></button>
      </div>
      <div class="modal-footer btn-center">
        <!--
        <button type="button" class="btn btn-info btn-xs py-0" onClick="migrateFrom();"><i class="fas fa-file-export"></i></button>
        -->
      </div>
    </div>
  </div>
</div>

<script>
var uuid = generateUUID();
var socketio = null;
var socket_ids = [];

var base_url = location.origin + '/';

var cards = [];    //. カード
var imgs = {};     //. 画像データ

var quiz_point = 0;
var image_category = -1;
var image_point = 0;
var image_blur = -1;
var blur_ratio = 1;
var image_16_open = 0;
var _quiz_id = null;
var _quiz_comment = '';

var answers = {};
var names = {};

$(function(){
  socketio = io.connect();

  init();

  $.ajax({
    type: 'GET',
    url: '/dbapi/quizset/<%= id %>',
    success: function( result ){
      if( result && result.status && result.body && result.body.quiz_ids ){
        $('#subject').html( result.body.subject );
        for( var i = 0; i < result.body.quiz_ids.length; i ++ ){
          var quiz_id = result.body.quiz_ids[i];
          var tr = '<tr id="quiz_' + quiz_id + '">'
            + '<td>' + ( i + 1 ) + '</td>'
            + '<td id="quizcat_' + quiz_id + '">&nbsp;</td>'
            + '<td id="quizimg_' + quiz_id + '">&nbsp;</td>'
            + '<td id="quizbody_' + quiz_id + '"></td>'
            + '<td id="quizcomment_' + quiz_id + '"></td>'
            + '<td id="quizpoint_' + quiz_id + '"></td>'
            + '</tr>';
          $('#quizlist_tbody').append( tr );

          $.ajax({
            type: 'GET',
            url: '/dbapi/quiz/' + quiz_id,
            success: function( qresult ){
              if( qresult && qresult.status && qresult.body ){
                //console.log( 'quiz_id = ' + quiz_id + ', _id = ' + qresult.body._id );
                var cat = ['一般','フリーテキスト','16分割','ぼかし'][qresult.body.category];
                $('#quizcat_'+qresult.body._id).html( cat );
                var a = '<a href="#" onClick="selectQuiz(\'' + qresult.body._id + '\', ' + qresult.body.category + ', ' + qresult.body.point + ', \'' + qresult.body.comment + '\');">' + qresult.body.body + '</a>';
                $('#quizbody_'+qresult.body._id).html( a );
                $('#quizcomment_'+qresult.body._id).html( qresult.body.comment );
                $('#quizpoint_'+qresult.body._id).html( qresult.body.point );
                if( qresult.body.img_url ){
                  var img = '<img src="' + qresult.body.img_url + '" width="100"/>';
                  $('#quizimg_'+qresult.body._id).html( img );
                }
              }
            },
            error: function( e0, e1, e2 ){
              console.log( e0, e1, e2 );
            }
          });
        }
      }
    },
    error: function( e0, e1, e2 ){
      console.log( e0, e1, e2 );
    }
  });

  var msg = {
    uuid: uuid,
    room: '<%= room %>',
    timestamp: ( new Date() ).getTime()
  };
  socketio.json.emit( 'init_admin', msg );

  socketio.on( 'init_admin_view', function( msg ){
    console.log( 'init_admin_view', msg );
  });
  socketio.on( 'init_share_view', function( msg ){
    console.log( 'init_share_view', msg );
  });

  socketio.on( 'init_client_view', function( msg ){
    var socket_id = msg.uuid; //msg.socket_id;
    if( socket_ids.indexOf( socket_id ) > -1 ){
    }else{
      socket_ids.push( socket_id );
      //$('#debug_ul').append( '<li id="socket_' + socket_id + '">' + socket_id + '</li>' );
      console.log( socket_ids );

      var color = generateColor( msg.name );

      $('#card-groups').html( '' );
      $.colorbox.remove();

      //. カード追加
      var card = '<div id="card_' + socket_id + '" class="card border-' + color + '" style="cursor: pointer;">'
        + '<div class="card-body text-' + color + '">'
        //+ '<h4 class="card-title"><a id="a_' + socket_id + '" href="#" class="btn btn-xs btn-' + color + '" onClick="removeCard(\'card_' + socket_id + '\');">&times;</a>' + msg.name + '</h4>'
        + '<h4 class="card-title"><a id="a_' + socket_id + '" class="my_a btn btn-xs btn-' + color + '" onClick="selectSocket(\'' + socket_id + '\');">&times;</a>' + msg.name + '</h4>'
        + '</div>'
        + '<a href="#box_content" id="box_content_' + socket_id + '" title="' + msg.name + '">'
        + '<img class="card-img-bottom" id="image_' + socket_id + '" alt="(image of ' + msg.name + ')" ts="' + msg.timestamp + '"/>'
        + '</a>'
        + '</div>';
      cards.push( card );

      //. カードグループを必要数だけ追加
      appendCardGroups( '#card-groups', cards.length );
    }

    //. 表示名を更新
    names[socket_id] = msg.name;
  });

  socketio.on( 'image_client_view', function( msg ){
    var socket_id = msg.uuid; //msg.socket_id;
    if( socket_ids.indexOf( socket_id ) > -1 ){
      var ts = $('#image_'+socket_id).attr( 'ts' );
      ts = parseInt( ts );

      if( msg.timestamp > ts ){
        $('#image_'+socket_id).prop( 'src', msg.image_src );
        $('#image_'+socket_id).prop( 'title', msg.comment );
        $('#image_'+socket_id).prop( 'ts', msg.timestamp );

        //. 再描画用に記録
        var img = {
          src: msg.image_src,
          title: msg.comment,
          ts: msg.timestamp
        };
        imgs[socket_id] = img;

        var zoom_socket_id = $('#zoom_image').attr( 'socket_id' );
        if( zoom_socket_id && zoom_socket_id == socket_id ){
          $('#zoom_image').prop( 'src', msg.image_src );
        }
      }
    }
  });

  socketio.on( 'quiz_select_view', function( msg ){
    $('body').removeClass( 'modal-open' );
    $('.modal-backdrop').remove();
    $('#answerModal').modal( 'hide' );

    $('.card').removeClass( 'border-secondary' );
    $('.card').removeClass( 'border-warning' );
    $('.card').removeClass( 'border-success' );
    $('.my_a').removeClass( 'btn-secondary' );
    $('.my_a').removeClass( 'btn-warning' );
    $('.my_a').removeClass( 'btn-success' );

    setTimeout( function(){
      var quiz_id = msg.quiz_id;
      _quiz_id = quiz_id;
      _quiz_comment = msg.quiz_comment;
      $.ajax({
        type: 'GET',
        url: '/dbapi/quiz/' + quiz_id,
        success: function( result ){
          if( result && result.status && result.body ){
            //var a = '<a href="#" onClick="selectQuiz(\'' + qresult.body._id + '\');">' + qresult.body.body + '</a>';
            var html = '<h3>' + result.body.body + '</h3>';
            if( result.body.img_url ){
              if( result.body.category != 2 ){
                html += '<div><img id="q_image" src="' + result.body.img_url + '" height="90%"/></div>';
              }else{
                html += '<div><table id="open16_table" class="table" style="background-image: url(\'' + result.body.img_url + '\');"></table></div>';
              }
            }

            switch( result.body.category ){
            case 0:
              //. 一般クイズ
              break;
            case 1:
              //. フリーテキスト出題
              break;
            case 2:
              //. 16分割クイズ
              break;
            case 3:
              //. ぼかしクイズ
              html += '<br/>'
                + '<input id="rng" type="range" value="9" min="0" max="9" step="1" onInput="changeBlur();"/> <span id="range_value">10</span>';
              break;
            }

            html += '</div>';

            $('#tab-pane-quiz').html( html );
            if( result.body.category == 3 ){
              var e = document.getElementById( 'q_image' );
              var iid = setInterval( function(){
                if( e.complete ){
                  blur_ratio = Math.floor( e.naturalWidth / 100 );
                  clearInterval( iid );
                  changeBlur();
                }
              }, 10 );
            }else if( result.body.category == 2 ){
              image_16_open = 0;
              for( var i = 0; i < 4; i ++ ){
                var tr = '<tr id="board_row_' + i + '">';
                for( var j = 0; j < 4; j ++ ){
                  var num = ( i * 4 + j + 1 );
                  var td = '<td id="panel_' + num + '" class="num_panel" onClick="open16_click(' + num + ');">' + num + '</td>';
                  tr += td;
                }
                tr += '</tr>';
                $('#open16_table').append( tr );
              }
            }
          }
        },
        error: function( e0, e1, e2 ){
          console.log( e0, e1, e2 );
        }
      });

    }, 200 );
  });

  socketio.on( 'quiz_hint_view', function( msg ){
    console.log( 'quiz_hint_view', msg );
  });

  socketio.on( 'quiz_finish_view', function( msg ){
    console.log( 'quiz_finish_view', msg );
  });

  socketio.on( 'quiz_fixed_view', function( msg ){
    console.log( 'quiz_fixed_view', msg );
    var target_uuid = msg.uuid;
    var target_quiz_id = msg.quiz_id;
    var target_quizset_id = msg.quizset_id;
    $('#card_'+target_uuid).removeClass( 'border-secondary' );
    $('#card_'+target_uuid).removeClass( 'border-success' );
    $('#a_'+target_uuid).removeClass( 'btn-secondary' );
    $('#a_'+target_uuid).removeClass( 'btn-success' );
    $('#card_'+target_uuid).addClass( 'border-warning' );
    $('#a_'+target_uuid).addClass( 'btn-warning' );

    if( answers[target_quiz_id] && !answers[target_quiz_id][target_uuid] ){
      var answer = { point: image_point, correct: false };
      if( image_category == 2 ){
        answer.point = 17 - image_16_open;  //. #14
      }else if( image_category == 3 ){
        answer.point = parseInt( $('#rng').val() ) + 1;
      }
      answers[target_quiz_id][target_uuid] = answer;
    }
    console.log( 'answers[target_quiz_id]', answers[target_quiz_id] );
  });

  socketio.on( 'quiz_correct_view', function( msg ){
    console.log( 'quiz_correct_view', msg );
    if( answers[_quiz_id] && answers[_quiz_id][msg.socket_id] ){
      answers[_quiz_id][msg.socket_id].correct = msg.correct;
    }
    console.log( 'quiz_correct_view', answers );
    selectCard( msg );
  });
});

function init(){
  //. リサイズ時
  //$(window).on( 'load resize', function(){
    resized();
  //});
}

function resized(){
  var browserWidth = window.innerWidth;
  var browserHeight = window.innerHeight;

  //socketio.emit( 'init_admin', { room: '<%= room %>', width: browserWidth, height: browserHeight } );
}

function selectSocket( socket_id ){
  //. 送信前は採点できなくする
  if( $('#card_'+socket_id).hasClass( 'border-success') || $('#card_'+socket_id).hasClass( 'border-warning') ){
    //. もう一度選択したらキャンセルできるようにしたい
    if( $('#card_'+socket_id).hasClass( 'border-success') ){
      $('#card_'+socket_id).removeClass( 'border-success');
      $('#card_'+socket_id).addClass( 'border-warning');
      $('#a_'+socket_id).removeClass( 'btn-success');
      $('#a_'+socket_id).addClass( 'btn-warning');
      socketio.emit( 'quiz_correct', { room: '<%= room %>', socket_id: socket_id, correct: false } );
    }else{
      $('#card_'+socket_id).removeClass( 'border-warning');
      $('#card_'+socket_id).addClass( 'border-success');
      $('#a_'+socket_id).removeClass( 'btn-warning');
      $('#a_'+socket_id).addClass( 'btn-success');
      socketio.emit( 'quiz_correct', { room: '<%= room %>', socket_id: socket_id, correct: true } );
    }
  }

  return false;
}

function removeCard( card_id ){
  $('#'+card_id).css( 'display', 'none' );

  //. card_id = 'card_XXXXXX';
  var socket_id = card_id.substr( 6 );
  if( imgs[socket_id] ){
    delete imgs[socket_id];
  }

  var b = true;
  for( var i = 0; i < cards.length && b; i ++ ){
    var card = cards[i];
    if( card.indexOf( 'card_' + socket_id ) > -1 && card.indexOf( 'image_' + socket_id ) > -1 ){
      cards.splice( i, 1 );
      b = false;
    }
  }
}

function zoomImage( socket_id ){
  if( socket_id ){
    //console.log( 'zoomImage: socket_id = ' + socket_id );
    $('#box_content').html( '<img id="zoom_image" socket_id="' + socket_id + '" src="' + $('#image_'+socket_id).prop( 'src' ) + '"/>' );
  }
}


//. num 個の要素をなるべく正方形に近い表形式の card-group 化する
function appendCardGroups( cardgroups_selector, num ){
  //. 近づける正方形の一辺の長さ
  var m = Math.ceil( Math.sqrt( num ) );
  //. m 個の card-group が必要
  for( var i = 0; i < m; i ++ ){
    $(cardgroups_selector).append( '<div class="card-group" id="cards-' + i + '">' );
  }
  //. ( m * m ) の正方形の中に表示する
  for( var i = 0; i < num; i ++ ){
    var card = cards[i];
    var row = Math.floor( i / m );
    $('#cards-'+row).append( card );
  }

  //. クラスでまとめて ColorBox の指定
  //$('.card').colorbox({ href: '#box_content', inline: true, transition: 'none', width: "90%", innerHeight: "90%", onOpen: function(){ var socket_id = $(this).prop( 'id' ).substr( 5 ); zoomImage( socket_id ); }, onClosed: function(){ $('#box_content').html(''); } });

  if( num % m ){
    var row = Math.floor( num / m );
    for( var i = num; i % m > 0; i ++ ){
      var dummycard = '<div class="card"></div>';
      $('#cards-'+row).append( dummycard );
    }
  }

  //. 画像再描画
  Object.keys( imgs ).forEach( function( socket_id ){
    var img = imgs[socket_id];
    //console.log( 'appendCardGroups: socket_id = ' + socket_id, img );

    $('#image_'+socket_id).prop( 'src', img.src );
    $('#image_'+socket_id).prop( 'title', img.title );
    $('#image_'+socket_id).prop( 'ts', img.ts );
  });
}

function selectQuiz( quiz_id, quiz_category, quiz_point, quiz_comment ){
  console.log( 'selectQuiz: quiz_id = ' + quiz_id );
  activeTab( 'tab-pane-quiz' );
  enableTab( 'tab-pane-quiz' );
  enableTab( 'tab-pane-answers' );
  enableTab( 'tab-pane-rank' );
  $('#showAnswersBtn').css( 'display', 'none' );
  $('#quizFinishBtn').css( 'display', 'inline' );
  image_category = quiz_category;
  image_point = quiz_point;
  if( !answers[quiz_id] ){ answers[quiz_id] = {}; }
  socketio.emit( 'quiz_select', { room: '<%= room %>', quiz_id: quiz_id, quizset_id: '<%= id %>', quiz_category: quiz_category, quiz_point: quiz_point, quiz_comment: quiz_comment } );

  return false;
}

function quizFinish(){
  $('#quizFinishBtn').css( 'display', 'none' );
  disableTab( 'tab-pane-quiz' );
  enableTab( 'tab-pane-answers' );
  disableTab( 'tab-pane-rank' );
  //setTimeout( function(){
    $('#showAnswersBtn').css( 'display', 'inline' );
    console.log( '_quiz_comment', _quiz_comment );
    socketio.emit( 'quiz_finish', { room: '<%= room %>', quiz_id: _quiz_id, quizset_id: '<%= id %>', comment: _quiz_comment } );
  //}, 5000 );
}

function showAnswers(){
  //. hideAnswers ダイアログを表示する
  $('body').removeClass( 'modal-open' );
  $('.modal-backdrop').remove();
  $('#hideAnswersModal').modal();

  socketio.emit( 'show_answers', { room: '<%= room %>', quiz_id: _quiz_id, quizset_id: '<%= id %>', answers: answers[_quiz_id] } );

  return false;
}

function hideAnswers(){
  //. hideAnswers ダイアログを非表示にする
  $('body').removeClass( 'modal-open' );
  $('.modal-backdrop').remove();
  $('#hideAnswersModal').modal( 'hide' );

  enableTab( 'tab-pane-quiz' );
  enableTab( 'tab-pane-answers' );
  enableTab( 'tab-pane-rank' );

  socketio.emit( 'hide_answers', { room: '<%= room %>', quiz_id: _quiz_id, quizset_id: '<%= id %>' } );

  return false;
}

function showRank(){
  //. hideRank ダイアログを表示する
  $('body').removeClass( 'modal-open' );
  $('.modal-backdrop').remove();
  $('#hideRankModal').modal();

  //. 現在のランキング情報をメッセージに含める
  socketio.emit( 'show_rank', { room: '<%= room %>', quizset_id: '<%= id %>', answers: answers, names: names } );

  return false;
}

function hideRank(){
  //. hideRank ダイアログを表示する
  $('body').removeClass( 'modal-open' );
  $('.modal-backdrop').remove();
  $('#hideRankModal').modal( 'hide' );

  socketio.emit( 'hide_rank', { room: '<%= room %>', quizset_id: '<%= id %>' } );

  return false;
}

function recordAnswers(){
  var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'<%= __("quizset.recordanswers.recording") %>', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
  var data = {
    quizset_id: '<%= id %>',
    answers: answers
  };
  $.ajax({
    type: 'POST',
    url: '/dbapi/answer_bulk',
    data: data,
    success: function( result ){
      obj.remove();
      if( result && result.status && result.body ){
      }
    },
    error: function( e0, e1, e2 ){
      obj.remove();
      console.log( e0, e1, e2 );
    }
  });
}

function changeBlur(){
  var b = parseInt( $('#rng').val() );
  $('#range_value').html( ( b + 1 ) );
  var t = $('#q_image')[0];
  t.style['-ms-filter'] = 'blur(' + ( b * blur_ratio ) + 'px)';
  t.style['filter'] = 'blur(' + ( b * blur_ratio ) + 'px)';

  //. blur の値を WebSocket で通知する
  socketio.emit( 'quiz_hint', { room: '<%= room %>', category: 3, blur: b, ratio: blur_ratio } );
}

function open16_click( num ){
  var o = $('#panel_'+num).css( 'opacity' );
  if( o == '0.6' ){
    $('#panel_'+num).css( 'border-width', '1px' );
    $('#panel_'+num).css( 'opacity', '0.3' );

    //. ヒントの数を WebSocket で通知する
    image_16_open ++;
    socketio.emit( 'quiz_hint', { room: '<%= room %>', category: 2, num: num, open: image_16_open } );
  }
}

//. for #2
function activeTab( tabid ){
  $('.nav-tabs a[href="#' + tabid + '"]').tab( 'show' );
}

function enableTab( tabid ){
  //$('.nav-tabs a[href="#' + tabid + '"]').parent().prop( 'disabled', '' );
  //$('.nav-tabs a[href="#' + tabid + '"]').parent().removeAttr( 'disabled' );
  $('.nav-tabs a[href="#' + tabid + '"]').attr( 'data-toggle', 'tab' );
}

function disableTab( tabid ){
  //$('.nav-tabs a[href="#' + tabid + '"]').parent().prop( 'disabled', 'disable' );
  //$('.nav-tabs a[href="#' + tabid + '"]').prop( 'data-toggle', '' );
  $('.nav-tabs a[href="#' + tabid + '"]').removeAttr( 'data-toggle' );
}
</script>
</body>
</html>
